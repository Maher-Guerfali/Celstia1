/* globals.css */
.ar-overlay {
  position: fixed !important;
  top: 0;
  left: 0;
  width: 100vw !important;
  height: 100vh !important;
  z-index: 9999;
  background: transparent;
}

.ar-ui {
  background: rgba(0, 0, 0, 0.7);
  padding: 1rem;
  border-radius: 8px;
}@import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --color-text-primary: rgb(240, 240, 246);
  --color-text-secondary: rgba(240, 240, 246, 0.7);
  --color-glass-bg: rgba(20, 20, 40, 0.5);
  --color-glass-border: rgba(255, 255, 255, 0.1);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body,
#__next {
  width: 100%;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: #000;
  color: var(--color-text-primary);
  font-family: 'Space Grotesk', sans-serif;
}

canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}

.glassmorphic {
  background: rgba(23, 25, 35, 0.9);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.glassmorphic img {
  transition: opacity 0.2s ease;
}

.glassmorphic:hover img {
  opacity: 0.8;
}

.cosmic-glow {
  text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
}
/* Add these to your index.css or create a new AR.css file and import it */

/* Styles for AR overlay */
.ar-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  pointer-events: auto;
}

/* Styles for AR UI elements */
.ar-ui {
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}

/* Hide certain UI elements in AR mode */
.ar-mode .hide-in-ar {
  display: none;
}

/* AR button styling */
.xr-button {
  background-color: rgba(72, 61, 139, 0.7) !important;
  color: white !important;
  border: 1px solid rgba(255, 255, 255, 0.3) !important;
  border-radius: 8px !important;
  padding: 8px 16px !important;
  font-weight: bold !important;
  cursor: pointer !important;
  transition: all 0.3s ease !important;
  position: absolute !important;
  top: 16px !important;
  right: 16px !important;
  z-index: 100 !important;
}

.xr-button:hover {
  background-color: rgba(72, 61, 139, 1) !important;
}

/* Add a class to the body when AR is active */
body.ar-active {
  overflow: hidden;
}

/* AR session UI */
.ar-session-ui {
  position: fixed;
  bottom: 16px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 100;
  display: flex;
  gap: 8px;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 8px;
  padding: 8px;
}

/* AR placement indicator */
.ar-placement-indicator {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 2px solid white;
  transform: translate(-50%, -50%);
  z-index: 50;
  pointer-events: none;
}

/* AR instructions */
.ar-instructions {
  position: fixed;
  top: 20%;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 16px;
  border-radius: 8px;
  max-width: 80%;
  text-align: center;
  z-index: 100;
  animation: fadeOut 5s forwards;
}

@keyframes fadeOut {
  0% { opacity: 1; }
  70% { opacity: 1; }
  100% { opacity: 0; pointer-events: none; }
}
.planet-card {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.5s ease, transform 0.5s ease;
}

.planet-card.visible {
  opacity: 1;
  transform: translateY(0);
}

@keyframes twinkle {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 1; }
}

.orbit-path {
  stroke-dasharray: 10 3;
  animation: dash 120s linear infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: -1000;
  }
}

.logo {
  position: fixed;
  top: 16px;
  left: 16px;
  z-index: 10;
  opacity: 0.8;
  transition: opacity 0.3s ease;
}

.logo:hover {
  opacity: 1;
}

.controls {
  position: fixed;
  bottom: 16px;
  right: 16px;
  z-index: 10;
  display: flex;
  gap: 8px;
}

.control-btn {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background: var(--color-glass-bg);
  border: 1px solid var(--color-glass-border);
  color: var(--color-text-primary);
  cursor: pointer;
  transition: all 0.3s ease;
}

.control-btn:hover {
  background: rgba(40, 40, 80, 0.6);
  transform: scale(1.1);
}

.loading-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  transition: opacity 1s ease;
}

.loading-progress {
  width: 200px;
  height: 4px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
  margin-top: 16px;
  overflow: hidden;
}

.loading-bar {
  height: 100%;
  background: linear-gradient(90deg, #3498db, #9b59b6);
  width: 0%;
  transition: width 0.5s ease;
}

.scene-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}

.ui-layer {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none; /* Allow clicking through to canvas */
}

.ui-layer > * {
  pointer-events: auto; /* Re-enable clicking for UI elements */
}

.tutorial-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(2px);
  z-index: 40;
}